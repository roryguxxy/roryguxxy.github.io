{"version":3,"file":"static/js/181.12513a96.chunk.js","mappings":"qKAIA,MA8EA,EA9EqBA,KAEjB,MAAMC,GAAaC,EAAAA,EAAAA,QAAO,OACnBC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GA6C3C,OA5BAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAaN,EAAWO,QAExBC,EAAW,IAAIC,sBAAqBC,IACtCA,EAAQC,SAAQC,IACRA,EAAMC,iBACNV,GAAa,GACbK,EAASM,UAAUR,GACvB,GACF,GACH,CACCS,KAAM,KACNC,WAAY,MACZC,UAAW,KAQf,OALIX,GACAE,EAASU,QAAQZ,GAId,KACCA,GACAE,EAASM,UAAUR,EACvB,CACH,GACF,KAGCa,EAAAA,EAAAA,MAAA,WAASC,GAAG,UAAUC,UAAU,mCAAkCC,SAAA,EAC9DH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAA8BC,SAAC,mBAC7CC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,SAAC,oCACvBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,SAAC,sDAE3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKxB,EAAYqB,UAAS,mCAAAI,OAAqCvB,EAAY,cAAgB,aAAcoB,UAC9GC,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CACdC,wBAAyB,CAAE,IAAK,EAAG,IAAK,EAAG,IAAK,GAAIL,UAGpDC,EAAAA,EAAAA,KAACK,EAAAA,EAAO,CAACP,UAAU,4BAA4BQ,OAAO,OAAMP,SAvDzD,CACX,CAAEQ,IAA2B,sBAA0BC,MAAO,SAAUC,QAAS,SACjF,CAAEF,IAA2B,qBAAyBC,MAAO,kBAAmBC,QAAS,YACzF,CAAEF,IAA2B,sBAA0BC,MAAO,YAAaC,QAAS,aACpF,CAAEF,IAA2B,sBAA0BC,MAAO,yBAA0BC,QAAS,YACjG,CAAEF,IAA2B,sBAA0BC,MAAO,aAAcC,QAAS,UACrF,CAAEF,IAA2B,sBAA0BC,MAAO,aAAcC,QAAS,YACrF,CAAEF,IAA2B,qBAAyBC,MAAO,UAAWC,QAAS,UACjF,CAAEF,IAA2B,sBAA0BC,MAAO,cAAeC,QAAS,UACtF,CAAEF,IAA2B,sBAA0BC,MAAO,gBAAiBC,QAAS,aA+CpEC,KAAI,CAACC,EAAOC,KAChBhB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uCAAuCS,IAAKI,EAAMJ,IAAKM,MAAO,CAAEC,MAAO,OAAQC,QAAS,SAAWC,IAAI,aACtHpB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,+BAA8BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oBAAmBC,SAAEY,EAAMH,SACzCZ,EAAAA,EAAAA,MAAA,KAAGE,UAAU,gBAAeC,SAAA,EAACC,EAAAA,EAAAA,KAACiB,EAAAA,IAAe,CAACnB,UAAU,SAAUa,EAAMF,gBAJjDG,aAYrC,C","sources":["pages/gallery.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport { IoLocationSharp } from \"react-icons/io5\";\r\n\r\nconst PhotoGallery = () => {\r\n\r\n    const gellaryRef = useRef(null);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n  \r\n    const images = [\r\n        { src: process.env.PUBLIC_URL + `/image/DSC08042.jpg`, title: \"Sunset\", content: \"Rosny\" },\r\n        { src: process.env.PUBLIC_URL + `/image/IGM8300.jpg`, title: \"Galactic Center\", content: \"Oakdowns\" },\r\n        { src: process.env.PUBLIC_URL + `/image/DSC01481.jpg`, title: \"Rainy Day\", content: \"Melbourne\" },\r\n        { src: process.env.PUBLIC_URL + `/image/DSC07426.jpg`, title: \"Aurora Over The Church\", content: \"Oakdowns\" },\r\n        { src: process.env.PUBLIC_URL + `/image/DSC01728.jpg`, title: \"Darks Mofo\", content: \"Hobart\" },\r\n        { src: process.env.PUBLIC_URL + `/image/DSC05729.jpg`, title: \"Silent Bay\", content: \"New Town\" },\r\n        { src: process.env.PUBLIC_URL + `/image/DSC0009.jpg`, title: \"Station\", content: \"Sydney\" },\r\n        { src: process.env.PUBLIC_URL + `/image/DSC06709.jpg`, title: \"Fall In TAS\", content: \"Hobart\" },\r\n        { src: process.env.PUBLIC_URL + `/image/Richmond.jpg`, title: \"Aurora Bridge\", content: \"Richmond\" },\r\n\r\n\r\n        // 更多图片路径\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const currentRef = gellaryRef.current;  // 将当前的 ref 存储在变量中\r\n\r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    setIsVisible(true);\r\n                    observer.unobserve(currentRef);  // 一旦元素可见，立即停止观察\r\n                }\r\n            });\r\n        }, {\r\n            root: null,\r\n            rootMargin: '0px',\r\n            threshold: 0.5\r\n        });\r\n\r\n        if (currentRef) {\r\n            observer.observe(currentRef);\r\n        }\r\n\r\n        // 清理函数使用 currentRef 而不是 cardRef.current\r\n        return () => {\r\n            if (currentRef) {\r\n                observer.unobserve(currentRef);\r\n            }\r\n        };\r\n    }, []);  // 确保 effect 只运行一次\r\n\r\n    return (\r\n        <section id=\"gallery\" className='photo gallery bg-bk text-wt pt-5' >\r\n            <div className='title text-center pt-16'>\r\n                <h1 className='font-medium mb-5 md:text-3xl'>Photo Gallery</h1>\r\n                <p className='text-gy'>Here are part of my artworks. </p>\r\n                <p className='text-gy'>If you'd like to know more, please view my IG</p>\r\n            </div>\r\n            <div ref={gellaryRef} className={`transition-opacity duration-500 ${isVisible ? 'opacity-100' : 'opacity-0'}`}>\r\n            <ResponsiveMasonry \r\n                columnsCountBreakPoints={{ 350: 2, 750: 3, 900: 3 }}\r\n            >\r\n\r\n                <Masonry className=\"-mt-16 scale-75 md:-mt-24\" gutter=\"20px\">\r\n                    {images.map((image, index) => (\r\n                        <div className=\"relative\" key={index} >\r\n                            <img className=\"rounded-lg shadow-md overflow-hidden\" src={image.src} style={{ width: \"100%\", display: \"block\" }} alt=\"Gallery\" />\r\n                            <div className=\"absolute bottom-0 w-full p-4\">\r\n                                <h3 className=\"font-bold text-lg\">{image.title}</h3>\r\n                                <p className='flex flex-row'><IoLocationSharp className='mt-1' />{image.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n                </Masonry>\r\n            </ResponsiveMasonry>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PhotoGallery;\r\n"],"names":["PhotoGallery","gellaryRef","useRef","isVisible","setIsVisible","useState","useEffect","currentRef","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","root","rootMargin","threshold","observe","_jsxs","id","className","children","_jsx","ref","concat","ResponsiveMasonry","columnsCountBreakPoints","Masonry","gutter","src","title","content","map","image","index","style","width","display","alt","IoLocationSharp"],"sourceRoot":""}